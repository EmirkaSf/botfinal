from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# üîê –¢–æ–∫–µ–Ω –∏ ID –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤—Ä—É—á–Ω—É—é)
BOT_TOKEN = "8187999524:AAG8gpdIZ_-wltHFAxT9KeWwKDaIZSSibRk"
OWNER_ID = 1295958989

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è —É—Ç–æ—á–Ω—è—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
user_waiting_question = {}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = ReplyKeyboardMarkup(
        [["‚úÖ –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª —Ç–æ–≤–∞—Ä"]],
        resize_keyboard=True
    )
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –ø–æ –æ–¥–Ω–æ–π –∏–∑ —Å—Å—ã–ª–æ–∫:\n"
        "üîπ [–í–∏—Ç—Ä–∏–Ω–∞ 1](https://t.me/loftconstruction)\n"
        "üîπ [–í–∏—Ç—Ä–∏–Ω–∞ 2](https://t.me/MagicTablesUz)\n\n"
        "–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª–æ ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=keyboard,
        disable_web_page_preview=True
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª —Ç–æ–≤–∞—Ä"
async def ask_contact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "‚úÖ –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª —Ç–æ–≤–∞—Ä":
        contact_button = KeyboardButton("üìû –û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)
        keyboard = ReplyKeyboardMarkup([[contact_button]], resize_keyboard=True)
        await update.message.reply_text(
            "–û—Ç–ª–∏—á–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç.\n"
            "–ù–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!",
            reply_markup=keyboard
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def contact_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    contact = update.message.contact
    name = contact.first_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    phone = contact.phone_number or "–ù–µ—Ç –Ω–æ–º–µ—Ä–∞"

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É
    await context.bot.send_message(
        chat_id=OWNER_ID,
        text=f"üì© –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç!\n–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}"
    )

    user_id = update.effective_user.id
    user_waiting_question[user_id] = True

    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –ú—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É üòä\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –∏—Ö —Å—é–¥–∞:"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Ç–æ—á–Ω—è—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
async def followup_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text

    if user_waiting_question.get(user_id):
        await context.bot.send_message(
            chat_id=OWNER_ID,
            text=f"üì® –£—Ç–æ—á–Ω–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:\n{text}"
        )
        await update.message.reply_text("–í—Å—ë –ø–µ—Ä–µ–¥–∞–Ω–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É! –°–ø–∞—Å–∏–±–æ üôå")
        user_waiting_question[user_id] = False
    else:
        await update.message.reply_text(
            "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –¥–µ—Ç–∞–ª–∏ –ø–æ –∑–∞–∫–∞–∑—É ‚Äî –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å —Å—é–¥–∞ üìù"
        )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & filters.Regex("‚úÖ –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª —Ç–æ–≤–∞—Ä"), ask_contact))
app.add_handler(MessageHandler(filters.CONTACT, contact_handler))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, followup_question))
app.run_polling()
